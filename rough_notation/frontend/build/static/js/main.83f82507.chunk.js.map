{"version":3,"sources":["../node_modules/typescript/lib sync","MyComponent.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MyRoughNotation","props","React","useState","is_hovering_bool","setIsHovering","value","index","index_is_selected","onMouseClick","onMouseEnter","onMouseLeave","rest","_index_is_selected","type","onClick","_onMouseClick","show","HigherFunc","values","query_is_selected","_props","set_my_hook","has_set_hook","itemsRef","useRef","scrollToId","itemId","map","getMap","node","get","console","log","scrollIntoView","behavior","block","inline","current","Map","res","key","ref","set","useEffect","MyComponent","state","isFocused","is_selected","my_callback","i","get_is_selected","set_is_selected","setState","setIDX","onClicked","prevState","Streamlit","setComponentValue","render","name","args","theme","style","borderStyling","primaryColor","border","outline","animate","strokeWidth","iterations","multiline","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"8HAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,oZCQzB,SAASC,EAAgBC,GACvB,MAA0CC,IAAMC,UAAS,GAAM,mBAAxDC,EAAgB,KAAEC,EAAa,KAItC,IACSC,EAOLL,EAPFK,MACOC,EAMLN,EANFM,MACmBC,EAKjBP,EALFO,kBAGcC,GAEZR,EAJFS,aAIET,EAHFU,aAGEV,EAFFQ,cACGG,EAAI,YACLX,EAAK,GAEDY,EAAqBL,KAAqBD,EAChD,OAAQ,8BACN,kBAAC,IAAa,iBAAKK,EAAI,CAAEE,KAAK,YAC5BJ,aAAc,kBAAML,GAAc,IAClCM,aAAc,kBAAMN,GAAc,IAClCU,QAAS,kBAlBb,SAAuBR,EAAYE,GACjCA,EAAaF,GAiBIS,CAAcT,EAAOE,IACpCQ,KAAMJ,GAAsBT,IAC3BE,GAEa,SAMf,SAASY,EAAWjB,GACzB,IAAgBkB,EAA2FlB,EAAnGkB,OAAmCC,EAAgEnB,EAAnFmB,kBAA8CC,EAAqCpB,EAA7CoB,OAA6BC,EAAgBrB,EAA7BqB,YAC9E,EAAgCpB,IAAMC,SAAS,GAAE,mBAA1CoB,EAAY,KACbC,GADsB,KACPtB,IAAMuB,OAAO,OAClC,SAASC,EAAWC,GAClB,IAAMC,EAAMC,IACNC,EAAWF,EAAIG,IAAIJ,GACzBK,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GACRA,GACFA,EAAKI,eAAe,CAClBC,SAAU,SACVC,MAAO,UACPC,OAAQ,WAKd,SAASR,IAKP,OAJKL,EAASc,UAEZd,EAASc,QAAU,IAAIC,OAElBf,EAASc,QAQlB,IAcME,EAAMrB,EAAOS,KAdL,SAACtB,EAAeC,GAC5B,IAAMK,EAAI,aACRN,MAAOA,EACPC,MAAOA,EACPC,kBAAmB,kBAAMY,MACtBC,GAEL,OACE,kBAACrB,EAAe,iBAAKY,EAAI,CACzB6B,IAAKlC,EACHmC,IAAK,SAACZ,GAAgBD,IAASc,IAAIpC,EAAOuB,UAWhD,OALAc,qBAAU,WACRtB,EAAYI,KAAe,CAACH,IAItB,8BAAOiB,GAChB,IAKKK,EAAW,iKAyDd,OAzDc,oCACRC,MAAQ,CACbC,WAAW,EAAOC,aAAc,EAAGC,YAAa,SAACC,MAC/C,EAIIC,gBAAkB,WACxB,OAAO,EAAKL,MAAME,aACnB,EACOI,gBAAkB,SAACF,GACrBA,GAAK,IACP,EAAKG,SAAS,CAAEL,YAAaE,IAC7BlB,QAAQC,IAAI,oCAAsCiB,GAClD,EAAKJ,MAAMG,YAAYC,KAE1B,EACO5B,YAAc,SAACgC,GACrB,EAAKD,SAAS,CAAEJ,YAAaK,KAC9B,EACOC,UAAY,SAACL,GACnB,EAAKG,UACH,SAAAG,GAAS,MAAK,CAAER,YAAaE,MAC7B,WACEO,IAAUC,kBAAkB,EAAKZ,MAAME,iBAG5C,EACMW,OAAS,WAEd,IAAMC,EAAO,EAAK3D,MAAM4D,KAAW,KACnC,EAAKT,gBAAgB,EAAKnD,MAAM4D,KAAqB,gBAErD,IAAQC,EAAU,EAAK7D,MAAf6D,MACFC,EAA6B,GAEnC,GAAID,EAAO,CACT,IAAME,EAAa,oBACjB,EAAKlB,MAAMC,UAAYe,EAAMG,aAAe,QAE9CF,EAAMG,OAASF,EACfD,EAAMI,QAAUH,EAIlB,IAAM7C,EAAcyC,EACd3D,EAAQ,CACZmE,SAAS,EACTC,YAAa,EACbC,WAAW,EACXC,WAAU,EACV9D,aAAc,EAAK8C,WAIrB,OAAO,kBAACrC,EAAU,CAACC,OAAQA,EAAQC,kBAAmB,EAAK+B,gBAAiB9B,OAAQpB,EAAOqB,YAAa,EAAKA,eAE9G,wBAzDc,CAASkD,KA6DXC,cAAwB5B,GCjKvC6B,IAASf,OACP,kBAAC,IAAMgB,WAAU,KACf,kBAAC,EAAW,OAEdC,SAASC,eAAe,W","file":"static/js/main.83f82507.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 21;","import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport { RoughNotation } from \"react-rough-notation\";\nimport { Map } from \"typescript\";\nimport { useState, useEffect } from 'react';\n\ninterface State {\n  isFocused: boolean\n  is_selected: number\n  my_callback: any\n}\n\nfunction MyRoughNotation(props: any){\n  const [is_hovering_bool, setIsHovering] = React.useState(false);\n    function _onMouseClick(index: any, onMouseClick: any){\n      onMouseClick(index);\n    }\n  const {\n    value: value,\n    index: index,\n    index_is_selected: index_is_selected,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onMouseClick: onMouseClick,\n    ...rest\n  } = props;\n    \n    const _index_is_selected = index_is_selected()==index;\n    return (<span>\n      <RoughNotation {...rest} type='underline'\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n        onClick={() => _onMouseClick(index, onMouseClick)}\n        show={_index_is_selected || is_hovering_bool} >\n        {value}\n\n      </RoughNotation> &nbsp; \n       </span >\n    )   \n  }    \n\n\nexport function HigherFunc(props:any) {\n  const { values: values, query_is_selected: query_is_selected, _props: _props, set_my_hook: set_my_hook } = props;\n  const [has_set_hook, setHook] = React.useState(0);\n  const itemsRef:any = React.useRef(null);\n  function scrollToId(itemId: any) {\n    const map = getMap();\n    const node:any = map.get(itemId);\n    console.log(map);\n    console.log(node);\n    if (node) {\n      node.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center'\n      });\n    }\n    \n  }\n  function getMap() {\n    if (!itemsRef.current) {\n      // Initialize the Map on first usage.\n      itemsRef.current = new Map();\n    }\n    return itemsRef.current;\n  }\n  // function buildRef(node: any, index: any) {\n  //   const map = \n  //   if (node) {\n  //     getMap().set(index, node)\n  //   }\n  // }\n  const _func = (value: string, index: any) => {\n    const rest = {\n      value: value,\n      index: index,\n      index_is_selected: () => query_is_selected(),\n      ..._props\n    };\n    return (\n      <MyRoughNotation {...rest}\n      key={index} \n        ref={(node: any) => { getMap().set(index, node) ;}}\n      />\n    )\n  };\n  const res = values.map(_func)\n  \n  useEffect(() => {\n    set_my_hook(scrollToId);}, [has_set_hook]\n\n  );\n\n  return (<span>{res}</span>)\n}\n\n\n\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state = {\n    isFocused: false, is_selected: -1, my_callback: (i: any) => { }     \n    }; \n  \n\n\n  private get_is_selected = () => {\n    return this.state.is_selected;\n  }\n  private set_is_selected = (i: any) => {\n    if (i >= 0) {\n      this.setState({ is_selected: i });\n      console.log(\"set_is_selected with parameter i=\" + i)\n      this.state.my_callback(i);\n    }\n  }\n  private set_my_hook = (setIDX: any) => {\n    this.setState({ my_callback: setIDX });\n  }\n  private onClicked = (i: any) => {\n    this.setState(\n      prevState => ({ is_selected: i }),\n      () => {\n        Streamlit.setComponentValue(this.state.is_selected);\n      }\n    )\n  }\n  public render = (): ReactNode => {\n\n    const name = this.props.args[\"name\"]\n    this.set_is_selected(this.props.args[\"selected_index\"])\n\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`\n      style.border = borderStyling\n      style.outline = borderStyling\n    }\n    \n    \n    const values: any = name;\n    const props = {\n      animate: false,\n      strokeWidth: 2,\n      iterations:1,\n      multiline:true,\n      onMouseClick: this.onClicked,\n    };\n    \n    \n    return <HigherFunc values={values} query_is_selected={this.get_is_selected} _props={props} set_my_hook={this.set_my_hook}></HigherFunc>;\n\n  }\n\n}\n\nexport default withStreamlitConnection(MyComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}